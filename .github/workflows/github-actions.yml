on: 
    push:
        branches: '**'
        tags: '' # Restrict to blank tags
    pull_request:
jobs:
 j1:
    name: Ubuntu 24.04
    runs-on: ubuntu-24.04
    steps: 
    - uses: actions/checkout@v4
    - run: |
        sudo apt-get -q update || true
        sudo apt-get install -y libopencv-dev
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
    - run: cmake . && cmake --build .

 j2:
    name: Ubuntu 22.04
    runs-on: ubuntu-22.04
    steps: 
    - uses: actions/checkout@v4
    - run: |
        sudo apt-get -q update || true
        sudo apt-get install -y libopencv-dev
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
    - run: cmake . && cmake --build .

 j3:
    name: macOS Sequoia
    runs-on: macos-15
    steps: 
    - uses: actions/checkout@v4
    - run: |
        brew install opencv
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
    - run: cmake . && cmake --build .

 j4:
    name: macOS Ventura
    runs-on: macos-13
    steps: 
    - uses: actions/checkout@v4
    - run: |
        brew install opencv
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
    - run: cmake . && cmake --build .

 j5:
    name: Windows Visual Studio 2022 x64
    runs-on: windows-2022
    steps: 
    - uses: actions/checkout@v4
    - run: |
        choco install -y -r --no-progress wget
        choco install -y -r --no-progress libopencv-dev --version=4.10.0 --params "'/url:https://github.com/lebarsfa/Packages/releases/download/libopencv-dev.4.10.0.20240807/libopencv-dev.4.10.0_x64_vc17_lib_Release.exe'"
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
      shell: bash
    - run: refreshenv.cmd & cmake -G "Visual Studio 17" -T v143 -A x64 -D OpenCV_ARCH=x64 -D OpenCV_RUNTIME=vc17 . & cmake --build . --config Release
      shell: cmd

 j6:
    name: Windows Visual Studio 2022 x86
    runs-on: windows-2022
    steps: 
    - uses: actions/checkout@v4
    - run: |
        choco install -y -r --no-progress wget
        choco install -y -r --no-progress libopencv-dev --version=4.10.0 --params "'/url:https://github.com/lebarsfa/Packages/releases/download/libopencv-dev.4.10.0.20240807/libopencv-dev.4.10.0_x86_vc17_lib_Release.exe'"
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
      shell: bash
    - run: refreshenv.cmd & cmake -G "Visual Studio 17" -T v143 -A Win32 -D OpenCV_ARCH=x86 -D OpenCV_RUNTIME=vc17 . & cmake --build . --config Release
      shell: cmd

 j7:
    name: Windows MinGW 13.2.0 x64
    runs-on: windows-2022
    steps: 
    - uses: actions/checkout@v4
    - run: |
        choco install -y -r --no-progress wget
        choco install -y -r --no-progress mingw --version=13.2.0 --force
        choco install -y -r --no-progress libopencv-dev --version=4.6.0.20240808
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
      shell: bash
    - run: cmake -G "MSYS Makefiles" . && cmake --build .
      shell: bash

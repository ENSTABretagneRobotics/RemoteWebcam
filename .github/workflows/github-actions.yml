on: 
    push:
        branches: '**'
        tags: '' # Restrict to blank tags
    pull_request:
jobs:
 j1:
    name: Ubuntu 22.04
    runs-on: ubuntu-22.04
    steps: 
    - uses: actions/checkout@v3
    - run: |
        sudo apt-get -q update || true
        sudo apt-get install -y libopencv-dev
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
    - run: cmake . && cmake --build .

 j2:
    name: Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps: 
    - uses: actions/checkout@v3
    - run: |
        sudo apt-get -q update || true
        sudo apt-get install -y libopencv-dev
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
    - run: cmake . && cmake --build .

 j3:
    name: macOS Monterey
    runs-on: macos-12
    steps: 
    - uses: actions/checkout@v3
    - run: |
        brew install opencv
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
    - run: cmake . && cmake --build .

 j4:
    name: macOS Big Sur
    runs-on: macos-11
    steps: 
    - uses: actions/checkout@v3
    - run: |
        brew install opencv
        #brew link --force opencv@3
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
    - run: cmake . && cmake --build .

 j5:
    name: Windows Visual Studio 2017 x64
    runs-on: windows-2019
    steps: 
    - uses: actions/checkout@v3
    - run: |
        choco install -y -r --no-progress wget
        choco install -y -r --no-progress opencv --version=3.4.8 --package-parameters '/Environment:C:\tools\opencv\build'
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
      shell: bash
    - run: refreshenv.cmd & cmake -G "Visual Studio 16" -T v141 -A x64 -D OpenCV_ARCH=x64 -D OpenCV_RUNTIME=vc15 . & cmake --build . --config Release
      shell: cmd

 j6:
    name: Windows MinGW 8.1.0 x64
    runs-on: windows-latest
    steps: 
    - uses: actions/checkout@v3
    - run: |
        choco install -y -r --no-progress wget
        choco install -y -r --no-progress libopencv-dev --version=4.2.0
        wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip
        wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip
      shell: bash
    - run: |
        export PATH=/c/OpenCV4.2.0/x64/mingw/bin:$PATH && cmake -G "MSYS Makefiles" . && cmake --build .
      shell: bash
 
 j7:
    name: Ubuntu 16.04 i386
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - run: docker run -i -v "${PWD}/..:${PWD}/.." i386/ubuntu:xenial /bin/bash -c "linux32 --32bit i386 uname -a && cat /etc/os-release && cd ${PWD} && apt-get -q update ; apt-get -y install sudo lsb-release wget unzip build-essential cmake libopencv-dev libgtk2.0 && lsb_release -a && wget https://github.com/ENSTABretagneRobotics/OSUtils/archive/master.zip && unzip -q -o master.zip && mv -f OSUtils-master ../OSUtils && rm -Rf master.zip && wget https://github.com/ENSTABretagneRobotics/Extensions/archive/master.zip && unzip -q -o master.zip && mv -f Extensions-master ../Extensions && rm -Rf master.zip && cmake . && cmake --build ."
